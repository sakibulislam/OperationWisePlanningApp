package mnj.mfg.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;

import java.sql.SQLException;

import java.util.Map;

import mnj.mfg.model.services.MainAMImpl;

import oracle.adf.model.BindingContext;
import oracle.adf.model.binding.DCBindingContainer;
import oracle.adf.model.binding.DCDataControl;
import oracle.adf.share.ADFContext;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.ViewObject;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 16 14:10:37 BDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HeaderEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        HeaderId {
            public Object get(HeaderEOImpl obj) {
                return obj.getHeaderId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        OspDocNo {
            public Object get(HeaderEOImpl obj) {
                return obj.getOspDocNo();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setOspDocNo((String)value);
            }
        }
        ,
        BuyerD {
            public Object get(HeaderEOImpl obj) {
                return obj.getBuyerD();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setBuyerD((Number)value);
            }
        }
        ,
        Style {
            public Object get(HeaderEOImpl obj) {
                return obj.getStyle();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        Season {
            public Object get(HeaderEOImpl obj) {
                return obj.getSeason();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        OspDate {
            public Object get(HeaderEOImpl obj) {
                return obj.getOspDate();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setOspDate((Date)value);
            }
        }
        ,
        Remarks {
            public Object get(HeaderEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(HeaderEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(HeaderEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(HeaderEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        OrgId {
            public Object get(HeaderEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setOrgId((Number)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(HeaderEOImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        Userid {
            public Object get(HeaderEOImpl obj) {
                return obj.getUserid();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setUserid((Number)value);
            }
        }
        ,
        Respid {
            public Object get(HeaderEOImpl obj) {
                return obj.getRespid();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setRespid((Number)value);
            }
        }
        ,
        Respapplid {
            public Object get(HeaderEOImpl obj) {
                return obj.getRespapplid();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setRespapplid((Number)value);
            }
        }
        ,
        Brand {
            public Object get(HeaderEOImpl obj) {
                return obj.getBrand();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setBrand((String)value);
            }
        }
        ,
        DocNo {
            public Object get(HeaderEOImpl obj) {
                return obj.getDocNo();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setDocNo((Number)value);
            }
        }
        ,
        ClosedStyle {
            public Object get(HeaderEOImpl obj) {
                return obj.getClosedStyle();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setClosedStyle((String)value);
            }
        }
        ,
        ClosingDate {
            public Object get(HeaderEOImpl obj) {
                return obj.getClosingDate();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setClosingDate((Date)value);
            }
        }
        ,
        PocId {
            public Object get(HeaderEOImpl obj) {
                return obj.getPocId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setPocId((Number)value);
            }
        }
        ,
        SystemId {
            public Object get(HeaderEOImpl obj) {
                return obj.getSystemId();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setSystemId((Number)value);
            }
        }
        ,
        CombinedAttribute1 {
            public Object get(HeaderEOImpl obj) {
                return obj.getCombinedAttribute1();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setCombinedAttribute1((String)value);
            }
        }
        ,
        StnLineEO {
            public Object get(HeaderEOImpl obj) {
                return obj.getStnLineEO();
            }

            public void put(HeaderEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(HeaderEOImpl object);

        public abstract void put(HeaderEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int OSPDOCNO = AttributesEnum.OspDocNo.index();
    public static final int BUYERD = AttributesEnum.BuyerD.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int OSPDATE = AttributesEnum.OspDate.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int USERID = AttributesEnum.Userid.index();
    public static final int RESPID = AttributesEnum.Respid.index();
    public static final int RESPAPPLID = AttributesEnum.Respapplid.index();
    public static final int BRAND = AttributesEnum.Brand.index();
    public static final int DOCNO = AttributesEnum.DocNo.index();
    public static final int CLOSEDSTYLE = AttributesEnum.ClosedStyle.index();
    public static final int CLOSINGDATE = AttributesEnum.ClosingDate.index();
    public static final int POCID = AttributesEnum.PocId.index();
    public static final int SYSTEMID = AttributesEnum.SystemId.index();
    public static final int COMBINEDATTRIBUTE1 = AttributesEnum.CombinedAttribute1.index();
    public static final int STNLINEEO = AttributesEnum.StnLineEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HeaderEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.HeaderEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for OspDocNo, using the alias name OspDocNo.
     * @return the OspDocNo
     */
    public String getOspDocNo() {
        return (String)getAttributeInternal(OSPDOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for OspDocNo.
     * @param value value to set the OspDocNo
     */
    public void setOspDocNo(String value) {
        setAttributeInternal(OSPDOCNO, value);
    }

    /**
     * Gets the attribute value for BuyerD, using the alias name BuyerD.
     * @return the BuyerD
     */
    public Number getBuyerD() {
        return (Number)getAttributeInternal(BUYERD);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuyerD.
     * @param value value to set the BuyerD
     */
    public void setBuyerD(Number value) {
        setAttributeInternal(BUYERD, value);
    }

    /**
     * Gets the attribute value for Style, using the alias name Style.
     * @return the Style
     */
    public String getStyle() {
        return (String)getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Style.
     * @param value value to set the Style
     */
    public void setStyle(String value) {
        setAttributeInternal(STYLE, value);
    }

    /**
     * Gets the attribute value for Season, using the alias name Season.
     * @return the Season
     */
    public String getSeason() {
        return (String)getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Season.
     * @param value value to set the Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for OspDate, using the alias name OspDate.
     * @return the OspDate
     */
    public Date getOspDate() {
        return (Date)getAttributeInternal(OSPDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OspDate.
     * @param value value to set the OspDate
     */
    public void setOspDate(Date value) {
        setAttributeInternal(OSPDATE, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the OrgId
     */
    public Number getOrgId() {
        return (Number)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(Number value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for Userid, using the alias name Userid.
     * @return the Userid
     */
    public Number getUserid() {
        return (Number)getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Userid.
     * @param value value to set the Userid
     */
    public void setUserid(Number value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for Respid, using the alias name Respid.
     * @return the Respid
     */
    public Number getRespid() {
        return (Number)getAttributeInternal(RESPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Respid.
     * @param value value to set the Respid
     */
    public void setRespid(Number value) {
        setAttributeInternal(RESPID, value);
    }

    /**
     * Gets the attribute value for Respapplid, using the alias name Respapplid.
     * @return the Respapplid
     */
    public Number getRespapplid() {
        return (Number)getAttributeInternal(RESPAPPLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Respapplid.
     * @param value value to set the Respapplid
     */
    public void setRespapplid(Number value) {
        setAttributeInternal(RESPAPPLID, value);
    }

    /**
     * Gets the attribute value for Brand, using the alias name Brand.
     * @return the Brand
     */
    public String getBrand() {
        return (String)getAttributeInternal(BRAND);
    }

    /**
     * Sets <code>value</code> as the attribute value for Brand.
     * @param value value to set the Brand
     */
    public void setBrand(String value) {
        setAttributeInternal(BRAND, value);
    }

    /**
     * Gets the attribute value for DocNo, using the alias name DocNo.
     * @return the DocNo
     */
    public Number getDocNo() {
        return (Number)getAttributeInternal(DOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocNo.
     * @param value value to set the DocNo
     */
    public void setDocNo(Number value) {
        setAttributeInternal(DOCNO, value);
    }

    /**
     * Gets the attribute value for ClosedStyle, using the alias name ClosedStyle.
     * @return the ClosedStyle
     */
    public String getClosedStyle() {
        return (String)getAttributeInternal(CLOSEDSTYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClosedStyle.
     * @param value value to set the ClosedStyle
     */
    public void setClosedStyle(String value) {
        setAttributeInternal(CLOSEDSTYLE, value);
    }

    /**
     * Gets the attribute value for ClosingDate, using the alias name ClosingDate.
     * @return the ClosingDate
     */
    public Date getClosingDate() {
        return (Date)getAttributeInternal(CLOSINGDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClosingDate.
     * @param value value to set the ClosingDate
     */
    public void setClosingDate(Date value) {
        setAttributeInternal(CLOSINGDATE, value);
    }

    /**
     * Gets the attribute value for PocId, using the alias name PocId.
     * @return the PocId
     */
    public Number getPocId() {
        return (Number)getAttributeInternal(POCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PocId.
     * @param value value to set the PocId
     */
    public void setPocId(Number value) {
        setAttributeInternal(POCID, value);
    }

    /**
     * Gets the attribute value for SystemId, using the alias name SystemId.
     * @return the SystemId
     */
    public Number getSystemId() {
        return (Number)getAttributeInternal(SYSTEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SystemId.
     * @param value value to set the SystemId
     */
    public void setSystemId(Number value) {
        setAttributeInternal(SYSTEMID, value);
    }

    /**
     * Gets the attribute value for CombinedAttribute1, using the alias name CombinedAttribute1.
     * @return the CombinedAttribute1
     */
    public String getCombinedAttribute1() {
        return (String)getAttributeInternal(COMBINEDATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for CombinedAttribute1.
     * @param value value to set the CombinedAttribute1
     */
    public void setCombinedAttribute1(String value) {
        setAttributeInternal(COMBINEDATTRIBUTE1, value);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getStnLineEO() {
        return (RowIterator)getAttributeInternal(STNLINEEO);
    }


    /**
     * @param headerId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number headerId) {
        return new Key(new Object[]{headerId});
    }

    public ApplicationModule getAppM(){
        DCBindingContainer bindingContainer =
            (DCBindingContainer)BindingContext.getCurrent().getCurrentBindingsEntry();
        //BindingContext bindingContext = BindingContext.getCurrent();
        DCDataControl dc =
            bindingContainer.findDataControl("MainAMDataControl"); // Name of application module in datacontrolBinding.cpx
        MainAMImpl appM = (MainAMImpl)dc.getDataProvider();
        return appM;
    }
    MainAMImpl am = (MainAMImpl)this.getAppM();

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
        try {
            super.create(attributeList);
            /* Sequence Generation Code of Header by PwC */  
            oracle.jbo.server.SequenceImpl s = new oracle.jbo.server.SequenceImpl("MNJ_MFG_OSP_HEADER_S",getDBTransaction());          
            oracle.jbo.domain.Number sVal = s.getSequenceNumber();          
            setHeaderId(sVal);
            /* End Sequence Generation Code of Header by PwC */
        } catch (Exception e) {
            e.printStackTrace();
        }
         
     }
    
//    public String getOrgCodeCustom(String orgId){
//        try {
//            ViewObject vo = am.getOrgDetailsVO1();
//            Row[] rowArray = vo.getAllRowsInRange();
//            
//            for (Row itRow : rowArray){
//                if (itRow.getAttribute("OperatingUnit") != null && itRow.getAttribute("OperatingUnit") == orgId){
//                    return itRow.getAttribute("OrganizationCode").toString();
//                }
//            }
//            
//        } catch (Exception e) {
//
//            e.printStackTrace();
//        }
//        return null;
//    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    
    public int getSrNoString() {
          int srno = 0;
          String stmt = "BEGIN :1 := MNJ_MFG_OSP_PKG.OSP_DOC_NO; end;";
          java.sql.CallableStatement cs =   getDBTransaction().createCallableStatement(stmt, 1);
          try {
              cs.registerOutParameter(1, oracle.jdbc.OracleTypes.NUMBER);
              cs.execute();
              srno = cs.getInt(1);
              cs.close();
          } catch (Exception e) {
              e.printStackTrace();
          }
          return srno;
      } 
    
    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */

  //  ---------------Method in EO For WHO Columns and Org -----------------------------------------------
        protected void doDML(int operation, TransactionEvent e) {
           
            Map sessionScope = ADFContext.getCurrent().getSessionScope();   
            String user = (String)sessionScope.get("userId");
            String org = (String)sessionScope.get("orgId");
            String RespId = (String)sessionScope.get("respId");
            System.out.println("Document No -->"+getSrNoString());
            if(DML_UPDATE == operation){
                try {
                    setLastUpdatedDate((Date)Date.getCurrentDate()); 
                    setLastUpdatedBy(new oracle.jbo.domain.Number(user));
                } catch (SQLException f) {
                    System.out.println(f.getMessage());
                }
            }
            else if (DML_INSERT == operation){
             
                try {
         
                    setDocNo(new oracle.jbo.domain.Number(getSrNoString()));
                    setCreationDate((Date)Date.getCurrentDate());  
                    setCreatedBy(new oracle.jbo.domain.Number(user));
                    setOrgId(new oracle.jbo.domain.Number(org));
                    setRespid(new oracle.jbo.domain.Number(RespId));
                
                } catch (SQLException f) {
                    ;
                }
            }
            super.doDML(operation, e);
        }
    
    

    
    
}
