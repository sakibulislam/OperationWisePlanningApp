package mnj.mfg.model.lov.views;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 20 14:22:33 BDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class StnVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        BpoNo {
            public Object get(StnVORowImpl obj) {
                return obj.getBpoNo();
            }

            public void put(StnVORowImpl obj, Object value) {
                obj.setBpoNo((String)value);
            }
        }
        ,
        OrderedQty {
            public Object get(StnVORowImpl obj) {
                return obj.getOrderedQty();
            }

            public void put(StnVORowImpl obj, Object value) {
                obj.setOrderedQty((Number)value);
            }
        }
        ,
        Stn {
            public Object get(StnVORowImpl obj) {
                return obj.getStn();
            }

            public void put(StnVORowImpl obj, Object value) {
                obj.setStn((String)value);
            }
        }
        ,
        Color {
            public Object get(StnVORowImpl obj) {
                return obj.getColor();
            }

            public void put(StnVORowImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        Wash {
            public Object get(StnVORowImpl obj) {
                return obj.getWash();
            }

            public void put(StnVORowImpl obj, Object value) {
                obj.setWash((String)value);
            }
        }
        ,
        Part {
            public Object get(StnVORowImpl obj) {
                return obj.getPart();
            }

            public void put(StnVORowImpl obj, Object value) {
                obj.setPart((String)value);
            }
        }
        ,
        BuyerId {
            public Object get(StnVORowImpl obj) {
                return obj.getBuyerId();
            }

            public void put(StnVORowImpl obj, Object value) {
                obj.setBuyerId((Number)value);
            }
        }
        ,
        StyleName {
            public Object get(StnVORowImpl obj) {
                return obj.getStyleName();
            }

            public void put(StnVORowImpl obj, Object value) {
                obj.setStyleName((String)value);
            }
        }
        ,
        Season {
            public Object get(StnVORowImpl obj) {
                return obj.getSeason();
            }

            public void put(StnVORowImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        OrgId {
            public Object get(StnVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(StnVORowImpl obj, Object value) {
                obj.setOrgId((Number)value);
            }
        }
        ,
        Flag {
            public Object get(StnVORowImpl obj) {
                return obj.getFlag();
            }

            public void put(StnVORowImpl obj, Object value) {
                obj.setFlag((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(StnVORowImpl object);

        public abstract void put(StnVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BPONO = AttributesEnum.BpoNo.index();
    public static final int ORDEREDQTY = AttributesEnum.OrderedQty.index();
    public static final int STN = AttributesEnum.Stn.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int WASH = AttributesEnum.Wash.index();
    public static final int PART = AttributesEnum.Part.index();
    public static final int BUYERID = AttributesEnum.BuyerId.index();
    public static final int STYLENAME = AttributesEnum.StyleName.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int FLAG = AttributesEnum.Flag.index();

    /**
     * This is the default constructor (do not remove).
     */
    public StnVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute BpoNo.
     * @return the BpoNo
     */
    public String getBpoNo() {
        return (String) getAttributeInternal(BPONO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BpoNo.
     * @param value value to set the  BpoNo
     */
    public void setBpoNo(String value) {
        setAttributeInternal(BPONO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrderedQty.
     * @return the OrderedQty
     */
    public Number getOrderedQty() {
        return (Number) getAttributeInternal(ORDEREDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrderedQty.
     * @param value value to set the  OrderedQty
     */
    public void setOrderedQty(Number value) {
        setAttributeInternal(ORDEREDQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Stn.
     * @return the Stn
     */
    public String getStn() {
        return (String) getAttributeInternal(STN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Stn.
     * @param value value to set the  Stn
     */
    public void setStn(String value) {
        setAttributeInternal(STN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Color.
     * @return the Color
     */
    public String getColor() {
        return (String) getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Color.
     * @param value value to set the  Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Wash.
     * @return the Wash
     */
    public String getWash() {
        return (String) getAttributeInternal(WASH);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Wash.
     * @param value value to set the  Wash
     */
    public void setWash(String value) {
        setAttributeInternal(WASH, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Part.
     * @return the Part
     */
    public String getPart() {
        return (String) getAttributeInternal(PART);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Part.
     * @param value value to set the  Part
     */
    public void setPart(String value) {
        setAttributeInternal(PART, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BuyerId.
     * @return the BuyerId
     */
    public Number getBuyerId() {
        return (Number) getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BuyerId.
     * @param value value to set the  BuyerId
     */
    public void setBuyerId(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StyleName.
     * @return the StyleName
     */
    public String getStyleName() {
        return (String) getAttributeInternal(STYLENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StyleName.
     * @param value value to set the  StyleName
     */
    public void setStyleName(String value) {
        setAttributeInternal(STYLENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Season.
     * @return the Season
     */
    public String getSeason() {
        return (String) getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Season.
     * @param value value to set the  Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public Number getOrgId() {
        return (Number) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(Number value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Flag.
     * @return the Flag
     */
    public String getFlag() {
        return (String) getAttributeInternal(FLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Flag.
     * @param value value to set the  Flag
     */
    public void setFlag(String value) {
        setAttributeInternal(FLAG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
