package mnj.mfg.model.lov.views;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 31 10:43:12 BDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DetailBlockAutoAssignRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        PriDep {
            public Object get(DetailBlockAutoAssignRowImpl obj) {
                return obj.getPriDep();
            }

            public void put(DetailBlockAutoAssignRowImpl obj, Object value) {
                obj.setPriDep((String)value);
            }
        }
        ,
        FinDep {
            public Object get(DetailBlockAutoAssignRowImpl obj) {
                return obj.getFinDep();
            }

            public void put(DetailBlockAutoAssignRowImpl obj, Object value) {
                obj.setFinDep((String)value);
            }
        }
        ,
        PrimaryInvOrg {
            public Object get(DetailBlockAutoAssignRowImpl obj) {
                return obj.getPrimaryInvOrg();
            }

            public void put(DetailBlockAutoAssignRowImpl obj, Object value) {
                obj.setPrimaryInvOrg((String)value);
            }
        }
        ,
        PrimaryInvOrgId {
            public Object get(DetailBlockAutoAssignRowImpl obj) {
                return obj.getPrimaryInvOrgId();
            }

            public void put(DetailBlockAutoAssignRowImpl obj, Object value) {
                obj.setPrimaryInvOrgId((String)value);
            }
        }
        ,
        FinalInvOrg {
            public Object get(DetailBlockAutoAssignRowImpl obj) {
                return obj.getFinalInvOrg();
            }

            public void put(DetailBlockAutoAssignRowImpl obj, Object value) {
                obj.setFinalInvOrg((String)value);
            }
        }
        ,
        FinalInvOrgId {
            public Object get(DetailBlockAutoAssignRowImpl obj) {
                return obj.getFinalInvOrgId();
            }

            public void put(DetailBlockAutoAssignRowImpl obj, Object value) {
                obj.setFinalInvOrgId((String)value);
            }
        }
        ,
        OpSeq {
            public Object get(DetailBlockAutoAssignRowImpl obj) {
                return obj.getOpSeq();
            }

            public void put(DetailBlockAutoAssignRowImpl obj, Object value) {
                obj.setOpSeq((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DetailBlockAutoAssignRowImpl object);

        public abstract void put(DetailBlockAutoAssignRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PRIDEP = AttributesEnum.PriDep.index();
    public static final int FINDEP = AttributesEnum.FinDep.index();
    public static final int PRIMARYINVORG = AttributesEnum.PrimaryInvOrg.index();
    public static final int PRIMARYINVORGID = AttributesEnum.PrimaryInvOrgId.index();
    public static final int FINALINVORG = AttributesEnum.FinalInvOrg.index();
    public static final int FINALINVORGID = AttributesEnum.FinalInvOrgId.index();
    public static final int OPSEQ = AttributesEnum.OpSeq.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DetailBlockAutoAssignRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute PriDep.
     * @return the PriDep
     */
    public String getPriDep() {
        return (String) getAttributeInternal(PRIDEP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PriDep.
     * @param value value to set the  PriDep
     */
    public void setPriDep(String value) {
        setAttributeInternal(PRIDEP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FinDep.
     * @return the FinDep
     */
    public String getFinDep() {
        return (String) getAttributeInternal(FINDEP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FinDep.
     * @param value value to set the  FinDep
     */
    public void setFinDep(String value) {
        setAttributeInternal(FINDEP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PrimaryInvOrg.
     * @return the PrimaryInvOrg
     */
    public String getPrimaryInvOrg() {
        return (String) getAttributeInternal(PRIMARYINVORG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PrimaryInvOrg.
     * @param value value to set the  PrimaryInvOrg
     */
    public void setPrimaryInvOrg(String value) {
        setAttributeInternal(PRIMARYINVORG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PrimaryInvOrgId.
     * @return the PrimaryInvOrgId
     */
    public String getPrimaryInvOrgId() {
        return (String) getAttributeInternal(PRIMARYINVORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PrimaryInvOrgId.
     * @param value value to set the  PrimaryInvOrgId
     */
    public void setPrimaryInvOrgId(String value) {
        setAttributeInternal(PRIMARYINVORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FinalInvOrg.
     * @return the FinalInvOrg
     */
    public String getFinalInvOrg() {
        return (String) getAttributeInternal(FINALINVORG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FinalInvOrg.
     * @param value value to set the  FinalInvOrg
     */
    public void setFinalInvOrg(String value) {
        setAttributeInternal(FINALINVORG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FinalInvOrgId.
     * @return the FinalInvOrgId
     */
    public String getFinalInvOrgId() {
        return (String) getAttributeInternal(FINALINVORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FinalInvOrgId.
     * @param value value to set the  FinalInvOrgId
     */
    public void setFinalInvOrgId(String value) {
        setAttributeInternal(FINALINVORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OpSeq.
     * @return the OpSeq
     */
    public Number getOpSeq() {
        return (Number) getAttributeInternal(OPSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OpSeq.
     * @param value value to set the  OpSeq
     */
    public void setOpSeq(Number value) {
        setAttributeInternal(OPSEQ, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
